import unittest
from ConveyorBelt import potential1D as pot

class test_envelopedPotential(unittest.TestCase):
    def test_calculating_Vr(self):
        expected = [4050.0, 3960.5, 3872.0, 3784.5, 3698.0, 3612.5, 3528.0, 3444.5, 3362.0, 3280.5, 3200.0, 3120.5,
                    3042.0, 2964.5, 2888.0, 2812.5, 2738.0, 2664.5, 2592.0, 2520.5, 2450.0, 2380.5, 2312.0, 2244.5,
                    2178.0, 2112.5, 2048.0, 1984.5, 1922.0, 1860.5, 1800.0, 1740.5, 1682.0, 1624.5, 1568.0, 1512.5,
                    1458.0, 1404.5, 1352.0, 1300.5, 1250.0, 1200.5, 1152.0, 1104.5, 1058.0, 1012.5, 968.0, 924.5, 882.0,
                    840.5, 800.0, 760.5, 722.0, 684.5, 648.0, 612.5, 578.0, 544.5, 512.0, 480.5, 450.0, 420.5, 392.0,
                    364.5, 338.0, 312.5, 288.0, 264.5, 242.0, 220.5, 200.0, 180.5, 162.0, 144.5, 128.0, 112.5, 98.0,
                    84.5, 72.0, 60.5, 50.0, 40.5, 32.0, 24.5, 18.0, 12.5, 8.0, 4.5, 2.0, 0.5, 0.0, 0.5, 2.0, 4.5, 8.0,
                    12.5, 18.0, 24.5, 32.0, 40.49999999793884, 49.30685281944005, 40.49999999793884, 32.0, 24.5, 18.0,
                    12.5, 8.0, 4.5, 2.0, 0.5, 0.0, 0.5, 2.0, 4.5, 8.0, 12.5, 18.0, 24.5, 32.0, 40.5, 50.0, 60.5, 72.0,
                    84.5, 98.0, 112.5, 128.0, 144.5, 162.0, 180.5, 200.0, 220.5, 242.0, 264.5, 288.0, 312.5, 338.0, 364.5,
                    392.0, 420.5, 450.0, 480.5, 512.0, 544.5, 578.0, 612.5, 648.0, 684.5, 722.0, 760.5, 800.0, 840.5, 882.0,
                    924.5, 968.0, 1012.5, 1058.0, 1104.5, 1152.0, 1200.5, 1250.0, 1300.5, 1352.0, 1404.5, 1458.0, 1512.5, 1568.0,
                    1624.5, 1682.0, 1740.5, 1800.0, 1860.5, 1922.0, 1984.5, 2048.0, 2112.5, 2178.0, 2244.5, 2312.0, 2380.5, 2450.0, 2520.5,
                    2592.0, 2664.5, 2738.0, 2812.5, 2888.0, 2964.5, 3042.0, 3120.5, 3200.0, 3280.5, 3362.0, 3444.5, 3528.0, 3612.5, 3698.0, 3784.5, 3872.0, 3960.5]

        s = 1
        Eoffs = [0, 0]
        V_is = [pot.harmonicOsc1D(x_shift=-10), pot.harmonicOsc1D(x_shift=10)]
        eds_pot = pot.envelopedPotential(V_is=V_is, s=s, Eoff_i=Eoffs)

        positions = list(range(-100,100))
        energies = eds_pot.ene(positions)

        self.assert_(any([ex==ene for ex, ene in zip(expected, energies)]))

if __name__ == '__main__':
    unittest.main()
